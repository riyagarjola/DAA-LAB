#include <iostream>
#include <cmath>
using namespace std;

int jumpSearch(int arr[], int n, int key, int &comparisons) {
    int step = sqrt(n);
    int prev = 0;
    
    while (prev < n && arr[min(n - 1, prev + step)] < key) {
        comparisons++;
        prev += step;
    }
    
    // Ensure last element is properly checked
    if (prev < n && arr[prev] == key) {
        comparisons++;
        return prev;
    }
    
    for (int i = prev; i < min(prev + step, n); i++) {
        comparisons++;
        if (arr[i] == key) {
            return i;
        }
    }
    
    // Explicitly check the last element
    if (arr[n - 1] == key) {
        comparisons++;
        return n - 1;
    }
    
    return -1;
}

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int arr[n];
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }
        int key;
        cin >> key;
        
        int comparisons = 0;
        int result = jumpSearch(arr, n, key, comparisons);
        
        if (result != -1) {
            cout << "Present " << comparisons << endl;
        } else {
            cout << "Not Present " << comparisons << endl;
        }
    }
    return 0;
}
